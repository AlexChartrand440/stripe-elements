import{o as e,q as t,s as n,u as o,v as r}from"./storybook-preview-d66a1359.js";import{a as s,f as a}from"./lit-element-9d52ca4f.js";import"./codesandbox-button-15b79192.js";function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}const p={};function m(n){let{components:s}=n,m=a(n,["components"]);return t("wrapper",c({},p,m,{components:s,mdxType:"MDXLayout"}),t(o,{title:"Framework Examples/React",parameters:{options:{selectedPanel:"storybookjs/docs/panel"}},mdxType:"Meta"}),t("h1",null,t("inlineCode",{parentName:"h1"},"<stripe-elements>")),t(r,{name:"stripe-elements",mdxType:"Story"},e`<codesandbox-button sandbox-id="23zw8"> </codesandbox-button>`),t("pre",null,t("code",c({parentName:"pre"},{className:"language-jsx"}),'import React, { useState, useRef, useEffect } from "react";\nimport ReactDOM from "react-dom";\nimport { getPropOr, compose } from "crocks";\nimport { PUBLISHABLE_KEY } from \'./config\';\nimport "./styles.css";\n\nconst isDisabled = ({ complete, empty }) => !complete || empty;\nconst getTarget = getPropOr({}, "target");\nconst getDetail = getPropOr(null, "detail");\nconst getToken = getPropOr(null, "token");\n\nfunction App() {\n  const stripeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const inputRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [disabled, setDisabled] = useState(true);\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onChange = compose(setDisabled, isDisabled, getTarget);\n  const onError = compose(setError, getDetail);\n  const onToken = compose(setToken, getToken);\n\n  const onClick = async () =>\n    stripeRef.current.createToken()\n      .then(getToken);\n      .then(setToken);\n\n  useEffect(() => {\n    stripeRef.current.addEventListener("change", onChange);\n    stripeRef.current.addEventListener("error", onError);\n    stripeRef.current.addEventListener("token", onToken);\n    buttonRef.current.addEventListener("click", onClick);\n    buttonRef.current.disabled = disabled;\n    if (token || error) viewerRef.current.object = token;\n  });\n\n  return (\n    <article className="App">\n      <stripe-elements ref={stripeRef} publishable-key={PUBLISHABLE_KEY} />\n      <mwc-button ref={buttonRef}>Submit</mwc-button>\n      <json-viewer ref={viewerRef} />\n    </article>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById("root"));\n')),t("h1",null,t("inlineCode",{parentName:"h1"},"<stripe-payment-request>")),t(r,{name:"stripe-payment-request",mdxType:"Story"},e`<codesandbox-button sandbox-id="0kktv"> </codesandbox-button>`),t("pre",null,t("code",c({parentName:"pre"},{className:"language-jsx"}),'import React, { useState, useRef, useEffect } from "react";\nimport ReactDOM from "react-dom";\nimport { getPropOr, compose } from "crocks";\nimport { PUBLISHABLE_KEY } from \'./config\';\nimport "./styles.css";\n\nconst getDetail = getPropOr(null, "detail");\nconst getPaymentMethod = getPropOr(null, "paymentMethod");\n\nfunction App() {\n  const stripeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onError = compose(setError, getDetail);\n  const onPaymentMethod = compose(setPaymentMethod, getPaymentMethod);\n\n  useEffect(() => {\n    stripeRef.current.addEventListener("error", onError);\n    stripeRef.current.addEventListener("payment-method", onPaymentMethod);\n    if (paymentMethod || error) viewerRef.current.object = paymentMethod;\n  });\n\n  return (\n    <article className="App">\n      <stripe-payment-request ref={stripeRef} publishable-key={PUBLISHABLE_KEY}\n        generate="payment-method"\n        request-payer-name\n        request-payer-email\n        request-payer-phone\n        amount="326"\n        label="Double Double"\n        country="CA"\n        currency="cad"\n      />\n      <json-viewer ref={viewerRef} />\n    </article>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById("root"));\n')))}m.isMDXComponent=!0;const i=()=>e`<codesandbox-button sandbox-id="23zw8"> </codesandbox-button>`;(i.story={}).name="stripe-elements",i.story.parameters={mdxSource:'html`<codesandbox-button sandbox-id="23zw8"> </codesandbox-button>`'};const l=()=>e`<codesandbox-button sandbox-id="0kktv"> </codesandbox-button>`;(l.story={}).name="stripe-payment-request",l.story.parameters={mdxSource:'html`<codesandbox-button sandbox-id="0kktv"> </codesandbox-button>`'};const u={title:"Framework Examples/React",parameters:{options:{selectedPanel:"storybookjs/docs/panel"}},includeStories:["stripeElements","stripePaymentRequest"]},d={"stripe-elements":"stripeElements","stripe-payment-request":"stripePaymentRequest"};u.parameters=u.parameters||{},u.parameters.docs=s({},u.parameters.docs||{},{page:()=>t(n,{mdxStoryNameToKey:d,mdxComponentMeta:u},t(m,null))});const f=["stripeElements","stripePaymentRequest"];export default u;export{f as __namedExportsOrder,i as stripeElements,l as stripePaymentRequest};
//# sourceMappingURL=react.stories-1a647028.js.map
