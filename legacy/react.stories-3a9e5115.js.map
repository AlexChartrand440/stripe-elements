{"version":3,"file":"react.stories-3a9e5115.js","sources":["../../stories/frameworks/react.stories.mdx"],"sourcesContent":["import '@power-elements/codesandbox-button';\n\nimport { html, Meta, Story } from '@open-wc/demoing-storybook';\n\n<Meta\n  title=\"Framework Examples/React\"\n  parameters={{ options: { selectedPanel: 'storybookjs/docs/panel' } }}\n/>\n\n# `<stripe-elements>`\n\n<Story name=\"stripe-elements\">\n  {html`<codesandbox-button sandbox-id=\"23zw8\"> </codesandbox-button>`}\n</Story>\n\n\n```jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getPropOr, compose } from \"crocks\";\nimport { PUBLISHABLE_KEY } from './config';\nimport \"./styles.css\";\n\nconst isDisabled = ({ complete, empty }) => !complete || empty;\nconst getTarget = getPropOr({}, \"target\");\nconst getDetail = getPropOr(null, \"detail\");\nconst getToken = getPropOr(null, \"token\");\n\nfunction App() {\n  const stripeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const inputRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [disabled, setDisabled] = useState(true);\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onChange = compose(setDisabled, isDisabled, getTarget);\n  const onError = compose(setError, getDetail);\n  const onToken = compose(setToken, getToken);\n\n  const onClick = async () =>\n    stripeRef.current.createToken()\n      .then(getToken);\n      .then(setToken);\n\n  useEffect(() => {\n    stripeRef.current.addEventListener(\"change\", onChange);\n    stripeRef.current.addEventListener(\"error\", onError);\n    stripeRef.current.addEventListener(\"token\", onToken);\n    buttonRef.current.addEventListener(\"click\", onClick);\n    buttonRef.current.disabled = disabled;\n    if (token || error) viewerRef.current.object = token;\n  });\n\n  return (\n    <article className=\"App\">\n      <stripe-elements ref={stripeRef} publishable-key={PUBLISHABLE_KEY} />\n      <mwc-button ref={buttonRef}>Submit</mwc-button>\n      <json-viewer ref={viewerRef} />\n    </article>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n```\n\n# `<stripe-payment-request>`\n\n<Story name=\"stripe-payment-request\">\n  {html`<codesandbox-button sandbox-id=\"0kktv\"> </codesandbox-button>`}\n</Story>\n\n\n```jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getPropOr, compose } from \"crocks\";\nimport { PUBLISHABLE_KEY } from './config';\nimport \"./styles.css\";\n\nconst getDetail = getPropOr(null, \"detail\");\nconst getPaymentMethod = getPropOr(null, \"paymentMethod\");\n\nfunction App() {\n  const stripeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onError = compose(setError, getDetail);\n  const onPaymentMethod = compose(setPaymentMethod, getPaymentMethod);\n\n  useEffect(() => {\n    stripeRef.current.addEventListener(\"error\", onError);\n    stripeRef.current.addEventListener(\"payment-method\", onPaymentMethod);\n    if (paymentMethod || error) viewerRef.current.object = paymentMethod;\n  });\n\n  return (\n    <article className=\"App\">\n      <stripe-payment-request ref={stripeRef} publishable-key={PUBLISHABLE_KEY}\n        generate=\"payment-method\"\n        request-payer-name\n        request-payer-email\n        request-payer-phone\n        amount=\"326\"\n        label=\"Double Double\"\n        country=\"CA\"\n        currency=\"cad\"\n      />\n      <json-viewer ref={viewerRef} />\n    </article>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n```\n"],"names":["layoutProps","MDXContent","components","props","mdx","mdxType","Meta","title","parameters","options","selectedPanel","parentName","Story","name","html","isMDXComponent","stripeElements","story","mdxSource","stripePaymentRequest","componentMeta","includeStories","mdxStoryNameToKey","docs","page","AddContext","mdxComponentMeta"],"mappings":"y+BAeA,IAAMA,EAAc,GAIpB,SAASC,SACPC,IAAAA,WACGC,6BAEIC,EALS,eAKMJ,EAAiBG,GAAOD,WAAYA,EAAYG,QAAQ,cAG5ED,EAACE,GAAKC,MAAM,2BAA2BC,WAAY,CACjDC,QAAS,CACPC,cAAe,2BAEhBL,QAAQ,SACXD,YAAIA,gBAAYO,WAAW,4BAC3BP,EAACQ,GAAMC,KAAK,kBAAkBR,QAAQ,SACvCS,QAECV,aAAKA,YAAMO,WAAW,OAAU,WACf,4pDAkDjBP,YAAIA,gBAAYO,WAAW,mCAC3BP,EAACQ,GAAMC,KAAK,yBAAyBR,QAAQ,SAC9CS,QAECV,aAAKA,YAAMO,WAAW,OAAU,WACf,y2CAgDrBV,EAAWc,gBAAiB,MAEfC,sBAAiB,kBACtBF,UAERE,EAAeC,MAAQ,GACvBD,EAAeC,MAAMJ,KAAO,kBAC5BG,EAAeC,MAAMT,WAAa,CAAEU,UAAW,2EAElCC,4BAAuB,kBAC5BL,UAERK,EAAqBF,MAAQ,GAC7BE,EAAqBF,MAAMJ,KAAO,yBAClCM,EAAqBF,MAAMT,WAAa,CAAEU,UAAW,uEAErD,IAAME,EAAgB,CAAEb,MAAO,2BAA4BC,WAAY,CACrEC,QAAS,CACPC,cAAe,2BAEhBW,eAAgB,CAAC,iBAAiB,yBAE/BC,EAAoB,mBAAmB,0CAA0C,wBAEvFF,EAAcZ,WAAaY,EAAcZ,YAAc,GACvDY,EAAcZ,WAAWe,UACnBH,EAAcZ,WAAWe,MAAQ,IACrCC,KAAM,kBAAMpB,EAACqB,GAAWH,kBAAmBA,EAAmBI,iBAAkBN,GAAehB,EAACH"}