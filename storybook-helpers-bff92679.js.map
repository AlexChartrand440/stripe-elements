{"version":3,"file":"storybook-helpers-bff92679.js","sources":["../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@morbidick/lit-element-notify/notify.js","../node_modules/@typed/curry/lib.es2015/curry1.js","../node_modules/@typed/curry/lib.es2015/curry2.js","../node_modules/@typed/curry/lib.es2015/curry3.js","../node_modules/@typed/curry/lib.es2015/curry4.js","../node_modules/@typed/curry/lib.es2015/curry5.js","../node_modules/@typed/curry/lib.es2015/curry.js","../node_modules/@lavadrop/kebab-case/kebabCase.mjs","../node_modules/@lavadrop/camel-case/camelCase.mjs","../node_modules/@pacote/memoize/lib/esm/index.js","../shared.js","../node_modules/@power-elements/json-viewer/json-viewer.js","../src/lib/strings.js","../stories/storybook-helpers.js"],"sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","/** @typedef {import('lit-element').PropertyDeclaration & { notify: string|Boolean }} AugmentedPropertyDeclaration */\n\n/**\n * @template TBase\n * @typedef {new (...args: any[]) => import('lit-element').LitElement & TBase} Constructor\n */\n\n/**\n * Returns the event name for the given property.\n * @param  {string}                       name    property name\n * @param  {AugmentedPropertyDeclaration} options property declaration\n * @return                                event name to fire\n */\nexport function eventNameForProperty(name, options = {}) {\n    if (options.notify && typeof options.notify === 'string') {\n        return options.notify;\n    }\n\n    if (options.attribute && typeof options.attribute === 'string') {\n        return `${options.attribute}-changed`;\n    }\n\n    return `${name.toLowerCase()}-changed`;\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Enables the nofity option for properties to fire change notification events\n *\n * @template TBase\n * @param {Constructor<TBase>} baseElement\n */\nexport const LitNotify = (baseElement) => class NotifyingElement extends baseElement {\n    /**\n     * Extend the LitElement `createProperty` method to map properties to events\n     */\n    static createProperty(name, options) {\n        super.createProperty(name, options);\n\n        if (!this._propertyEventMap) {\n            this._propertyEventMap = new Map();\n        }\n\n        if (options.notify) {\n            this._propertyEventMap.set(name, eventNameForProperty(name, options));\n        }\n    }\n\n    /**\n     * check for changed properties with notify option and fire the events\n     */\n    update(changedProps) {\n        super.update(changedProps);\n\n        if (!this.constructor._propertyEventMap) {\n            return;\n        }\n\n        for (const [eventProp, eventName] of this.constructor._propertyEventMap.entries()) {\n            if (changedProps.has(eventProp)) {\n                this.dispatchEvent(new CustomEvent(eventName, {\n                    detail: {\n                        value: this[eventProp],\n                    },\n                    bubbles: true,\n                    composed: false,\n                }));\n            }\n        }\n    }\n};\n\nexport default LitNotify;\n","export function curry1(fn) {\n    function curried(a) {\n        switch (arguments.length) {\n            case 0: return curried;\n            default: return fn(a);\n        }\n    }\n    return curried;\n}\n;\n//# sourceMappingURL=curry1.js.map","import { curry1 } from './curry1';\nexport function curry2(fn) {\n    function curried(a, b) {\n        switch (arguments.length) {\n            case 0: return curried;\n            case 1: return curry1(function (b) { return fn(a, b); });\n            default: return fn(a, b);\n        }\n    }\n    return curried;\n}\n//# sourceMappingURL=curry2.js.map","import { curry1 } from './curry1';\nimport { curry2 } from './curry2';\nexport function curry3(fn) {\n    function curried(a, b, c) {\n        switch (arguments.length) {\n            case 0: return curried;\n            case 1: return curry2(function (b, c) { return fn(a, b, c); });\n            case 2: return curry1(function (c) { return fn(a, b, c); });\n            default: return fn(a, b, c);\n        }\n    }\n    return curried;\n}\n//# sourceMappingURL=curry3.js.map","import { curry1 } from './curry1';\nimport { curry2 } from './curry2';\nimport { curry3 } from './curry3';\nexport function curry4(fn) {\n    function curried(a, b, c, d) {\n        switch (arguments.length) {\n            case 0: return curried;\n            case 1: return curry3(function (b, c, d) { return fn(a, b, c, d); });\n            case 2: return curry2(function (c, d) { return fn(a, b, c, d); });\n            case 3: return curry1(function (d) { return fn(a, b, c, d); });\n            default: return fn(a, b, c, d);\n        }\n    }\n    return curried;\n}\n//# sourceMappingURL=curry4.js.map","import { curry1 } from './curry1';\nimport { curry2 } from './curry2';\nimport { curry3 } from './curry3';\nimport { curry4 } from './curry4';\nexport function curry5(fn) {\n    function curried(a, b, c, d, e) {\n        switch (arguments.length) {\n            case 0: return curried;\n            case 1: return curry4(function (b, c, d, e) { return fn(a, b, c, d, e); });\n            case 2: return curry3(function (c, d, e) { return fn(a, b, c, d, e); });\n            case 3: return curry2(function (d, e) { return fn(a, b, c, d, e); });\n            case 4: return curry1(function (e) { return fn(a, b, c, d, e); });\n            default: return fn(a, b, c, d, e);\n        }\n    }\n    return curried;\n}\n//# sourceMappingURL=curry5.js.map","import { curry1 } from './curry1';\nimport { curry2 } from './curry2';\nimport { curry3 } from './curry3';\nimport { curry4 } from './curry4';\nimport { curry5 } from './curry5';\nexport function curry(fn) {\n    switch (fn.length) {\n        case 0: return fn;\n        case 1: return curry1(fn);\n        case 2: return curry2(fn);\n        case 3: return curry3(fn);\n        case 4: return curry4(fn);\n        case 5: return curry5(fn);\n        default: throw new Error(\"Its highly suggested that you do not write functions with more than 5 parameters.\");\n    }\n}\n//# sourceMappingURL=curry.js.map","const allCapitalLetterGroups = /[A-ZÀ-ÖÙ-Ý]+/g\nconst allLowercaseWords = /[a-zà-öù-ý]+/g\n/**\n *\tConverts a string value into [kebab case](https://en.wikipedia.org/wiki/Kebab_case).\n * @param value The string to convert.\n * @category String\n * @returns The kebab-cased string.\n * @example\nkebabCase('fooBARBaz')\n// => 'foo-bar-baz'\n */\nexport default function kebabCase(value) {\n\tconst words = value\n\t\t.replace(allCapitalLetterGroups, brokenLowered)\n\t\t.match(allLowercaseWords)\n\treturn words ? words.join('-') : ''\n\tfunction brokenLowered(s) {\n\t\treturn (\n\t\t\t' ' +\n\t\t\t(s.length > 2 ? s.slice(0, -1) + ' ' + s.slice(-1) : s).toLowerCase()\n\t\t)\n\t}\n}\n","const allCapitalLetterGroups = /[A-ZÀ-ÖÙ-Ý]+/g\nconst allWords = /[A-ZÀ-ÖÙ-Ýa-zà-öù-ý]+/g\n/**\n *\tConverts a string value into [camel case](https://en.wikipedia.org/wiki/Camel_case).\n * @param value The string to convert.\n * @category String\n * @returns The camel-cased string.\n * @example\ncamelCase('foo-bar-baz')\n// => 'fooBarBaz'\n */\nexport default function camelCase(value) {\n\tconst words = value\n\t\t.replace(allCapitalLetterGroups, valleyCase)\n\t\t.match(allWords)\n\treturn words\n\t\t? words[0][0].toLowerCase() +\n\t\t\t\twords\n\t\t\t\t\t.map(x => x[0].toUpperCase() + x.slice(1))\n\t\t\t\t\t.join('')\n\t\t\t\t\t.slice(1)\n\t\t: ''\n\tfunction valleyCase(s) {\n\t\treturn s.length > 2\n\t\t\t? s[0] + s.slice(1, -1).toLowerCase() + s.slice(-1)\n\t\t\t: s\n\t}\n}\n","function createCache() {\n    const cache = {};\n    return {\n        has: (key) => Object.hasOwnProperty.call(cache, key),\n        get: (key) => cache[key],\n        set: (key, value) => {\n            cache[key] = value;\n        }\n    };\n}\nexport function memoize(cacheKeyFn, fn) {\n    const cache = createCache();\n    return (...args) => {\n        const key = cacheKeyFn(...args);\n        if (!cache.has(key)) {\n            cache.set(key, fn(...args));\n        }\n        return cache.get(key);\n    };\n}\n","import _toArray from '@babel/runtime/helpers/esm/toArray';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _get from '@babel/runtime/helpers/esm/get';\nimport { LitNotify } from '@morbidick/lit-element-notify';\nimport { LitElement, property, html, css } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { curry } from '@typed/curry';\nimport { render } from 'lit-html';\nimport eagerDash from '@lavadrop/kebab-case';\nimport eagerCamel from '@lavadrop/camel-case';\nimport { memoize } from '@pacote/memoize';\n\nfunction bound(elementDescriptor) {\n  const {\n    kind,\n    key,\n    descriptor\n  } = elementDescriptor;\n\n  if (kind !== 'method') {\n    throw Error('@bound decorator can only be used on methods');\n  }\n\n  const method = descriptor.value;\n  const initializer = // check for private method\n  typeof key === 'object' ? function () {\n    return method.bind(this);\n  } : // For public and symbol-keyed methods (which are technically public),\n  // we defer method lookup until construction to respect the prototype chain.\n  function () {\n    return this[key].bind(this);\n  }; // Return both the original method and a bound function field that calls the method.\n  // (That way the original method will still exist on the prototype, avoiding\n  // confusing side-effects.)\n\n  elementDescriptor.extras = [{\n    kind: 'field',\n    key,\n    placement: 'own',\n    initializer,\n    descriptor: { ...descriptor,\n      value: undefined\n    }\n  }];\n  return elementDescriptor;\n}\n\n/** @typedef {import('lit-element').PropertyDeclaration & { readOnly: Boolean }} AugmentedPropertyDeclaration */\n\n/**\n * @template TBase\n * @typedef {new (...args: any[]) => import('lit-element').LitElement & TBase} Constructor\n */\n// eslint-disable-next-line valid-jsdoc\n\n/**\n * Enables the nofity option for properties to fire change notification events\n *\n * @template TBase\n * @param {Constructor<TBase>} superclass\n */\nconst ReadOnlyPropertiesMixin = superclass => {\n  var _temp;\n\n  /**\n   * @type {Map<string, symbol>}\n   * @private\n   */\n  const _readOnlyPropertyNamesMap = new Map();\n\n  return _temp = class ReadOnlyPropertiesClass extends superclass {\n    /**\n     * @inheritdoc\n     * @param  {string} name property name\n     * @param  {AugmentedPropertyDeclaration} options augmented property declaration with optional `readOnly` boolean.\n     */\n    static createProperty(name, options) {\n      let finalOptions = options;\n\n      if (options.readOnly) {\n        const privateName = Symbol(name);\n\n        _readOnlyPropertyNamesMap.set(name, privateName);\n\n        Object.defineProperty(this.prototype, name, {\n          get() {\n            return this[privateName];\n          },\n\n          set(value) {\n            // allow for class field initialization\n\n            /* istanbul ignore if */\n            if (this._readOnlyPropertyInitializedMap.get(name)) return;\n            this[privateName] = value;\n\n            this._readOnlyPropertyInitializedMap.set(name, true);\n          }\n\n        });\n        finalOptions = { ...options,\n          noAccessor: true\n        };\n      }\n\n      super.createProperty(name, finalOptions);\n    }\n    /**\n     * @type {Map<string, boolean>}\n     * @private\n     */\n\n\n    constructor() {\n      super();\n\n      _defineProperty(this, \"_readOnlyPropertyInitializedMap\", new Map());\n\n      this._setPropEntry = this._setPropEntry.bind(this);\n    }\n    /**\n     * Set read-only properties\n     * @param  {Object<string, unknown>}  props\n     * @private\n     */\n\n\n    async set(props) {\n      await Promise.all(Object.entries(props).map(this._setPropEntry));\n    }\n    /**\n     * @param {[string, unknown]} entry\n     * @return {Promise<unknown>}\n     * @private\n     */\n\n\n    _setPropEntry([name, newVal]) {\n      // typescript... https://github.com/microsoft/TypeScript/issues/1863\n\n      /** @type {any} */\n      const privateName = _readOnlyPropertyNamesMap.get(name);\n\n      const oldVal = this[privateName];\n      this[privateName] = newVal;\n      return this.requestUpdate(name, oldVal);\n    }\n\n  }, _temp;\n};\n\n/**\n * Remove an element from the DOM\n * @param {ChildNode} el\n * @return {void}\n */\n\n/* istanbul ignore next */\n\nconst remove = el => el === null || el === void 0 ? void 0 : el.remove();\nconst appendTemplate = curry(function appendTemplate(template, target) {\n  const tmp = document.createElement('div');\n  render(template, tmp);\n  const {\n    firstElementChild\n  } = tmp;\n  target.appendChild(firstElementChild);\n  tmp.remove();\n  return firstElementChild;\n});\n\nconst mapPropEntry = mapping => ([key, value]) => key in mapping && typeof mapping[key] === 'function' ? [key, mapping[key](value)] : [key, value];\n\nconst mapProps = mapping => obj => Object.fromEntries(Object.entries(obj).map(mapPropEntry(mapping)));\nconst mapDataset = f => ({\n  dataset\n}) => f(dataset);\n\nconst identity = x => x;\n/** camelCase a string */\n\n\nconst camel = memoize(identity, eagerCamel);\n/** dash-case a string */\n\nconst dash = memoize(identity, eagerDash);\n/**\n * Generates a random mount point for Stripe Elements. This will allow multiple\n * Elements forms to be embedded on a single page.\n * @param {'STRIPE-ELEMENTS'|'STRIPE-PAYMENT-REQUEST'} tagName element tag name\n * @return {string} mount element id\n */\n\nfunction generateRandomMountElementId(tagName) {\n  return `${tagName.toLowerCase()}-mount-point-${(Date.now() + Math.random() * 1000).toString(36).substr(0, 8)}`;\n}\n\nconst elem = xs => x => xs.includes(x);\nconst isRepresentation = elem(['paymentMethod', 'source', 'token']);\n\n/**\n * Throws an error if the response is not OK.)\n * @param  {Response} response\n * @resolves {Response}\n * @rejects {Error}\n */\nasync function throwBadResponse(response) {\n  const {\n    ok,\n    statusText\n  } = response;\n  if (!ok) throw new Error(statusText);\n  return response;\n}\n\nfunction _decorate(decorators, factory, superClass, mixins) { var api = _getDecoratorsApi(); if (mixins) { for (var i = 0; i < mixins.length; i++) { api = mixins[i](api); } } var r = factory(function initialize(O) { api.initializeInstanceElements(O, decorated.elements); }, superClass); var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators); api.initializeClassElements(r.F, decorated.elements); return api.runClassFinishers(r.F, decorated.finishers); }\n\nfunction _getDecoratorsApi() { _getDecoratorsApi = function () { return api; }; var api = { elementsDefinitionOrder: [[\"method\"], [\"field\"]], initializeInstanceElements: function (O, elements) { [\"method\", \"field\"].forEach(function (kind) { elements.forEach(function (element) { if (element.kind === kind && element.placement === \"own\") { this.defineClassElement(O, element); } }, this); }, this); }, initializeClassElements: function (F, elements) { var proto = F.prototype; [\"method\", \"field\"].forEach(function (kind) { elements.forEach(function (element) { var placement = element.placement; if (element.kind === kind && (placement === \"static\" || placement === \"prototype\")) { var receiver = placement === \"static\" ? F : proto; this.defineClassElement(receiver, element); } }, this); }, this); }, defineClassElement: function (receiver, element) { var descriptor = element.descriptor; if (element.kind === \"field\") { var initializer = element.initializer; descriptor = { enumerable: descriptor.enumerable, writable: descriptor.writable, configurable: descriptor.configurable, value: initializer === void 0 ? void 0 : initializer.call(receiver) }; } Object.defineProperty(receiver, element.key, descriptor); }, decorateClass: function (elements, decorators) { var newElements = []; var finishers = []; var placements = { static: [], prototype: [], own: [] }; elements.forEach(function (element) { this.addElementPlacement(element, placements); }, this); elements.forEach(function (element) { if (!_hasDecorators(element)) return newElements.push(element); var elementFinishersExtras = this.decorateElement(element, placements); newElements.push(elementFinishersExtras.element); newElements.push.apply(newElements, elementFinishersExtras.extras); finishers.push.apply(finishers, elementFinishersExtras.finishers); }, this); if (!decorators) { return { elements: newElements, finishers: finishers }; } var result = this.decorateConstructor(newElements, decorators); finishers.push.apply(finishers, result.finishers); result.finishers = finishers; return result; }, addElementPlacement: function (element, placements, silent) { var keys = placements[element.placement]; if (!silent && keys.indexOf(element.key) !== -1) { throw new TypeError(\"Duplicated element (\" + element.key + \")\"); } keys.push(element.key); }, decorateElement: function (element, placements) { var extras = []; var finishers = []; for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) { var keys = placements[element.placement]; keys.splice(keys.indexOf(element.key), 1); var elementObject = this.fromElementDescriptor(element); var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject); element = elementFinisherExtras.element; this.addElementPlacement(element, placements); if (elementFinisherExtras.finisher) { finishers.push(elementFinisherExtras.finisher); } var newExtras = elementFinisherExtras.extras; if (newExtras) { for (var j = 0; j < newExtras.length; j++) { this.addElementPlacement(newExtras[j], placements); } extras.push.apply(extras, newExtras); } } return { element: element, finishers: finishers, extras: extras }; }, decorateConstructor: function (elements, decorators) { var finishers = []; for (var i = decorators.length - 1; i >= 0; i--) { var obj = this.fromClassDescriptor(elements); var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj); if (elementsAndFinisher.finisher !== undefined) { finishers.push(elementsAndFinisher.finisher); } if (elementsAndFinisher.elements !== undefined) { elements = elementsAndFinisher.elements; for (var j = 0; j < elements.length - 1; j++) { for (var k = j + 1; k < elements.length; k++) { if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) { throw new TypeError(\"Duplicated element (\" + elements[j].key + \")\"); } } } } } return { elements: elements, finishers: finishers }; }, fromElementDescriptor: function (element) { var obj = { kind: element.kind, key: element.key, placement: element.placement, descriptor: element.descriptor }; var desc = { value: \"Descriptor\", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); if (element.kind === \"field\") obj.initializer = element.initializer; return obj; }, toElementDescriptors: function (elementObjects) { if (elementObjects === undefined) return; return _toArray(elementObjects).map(function (elementObject) { var element = this.toElementDescriptor(elementObject); this.disallowProperty(elementObject, \"finisher\", \"An element descriptor\"); this.disallowProperty(elementObject, \"extras\", \"An element descriptor\"); return element; }, this); }, toElementDescriptor: function (elementObject) { var kind = String(elementObject.kind); if (kind !== \"method\" && kind !== \"field\") { throw new TypeError('An element descriptor\\'s .kind property must be either \"method\" or' + ' \"field\", but a decorator created an element descriptor with' + ' .kind \"' + kind + '\"'); } var key = _toPropertyKey(elementObject.key); var placement = String(elementObject.placement); if (placement !== \"static\" && placement !== \"prototype\" && placement !== \"own\") { throw new TypeError('An element descriptor\\'s .placement property must be one of \"static\",' + ' \"prototype\" or \"own\", but a decorator created an element descriptor' + ' with .placement \"' + placement + '\"'); } var descriptor = elementObject.descriptor; this.disallowProperty(elementObject, \"elements\", \"An element descriptor\"); var element = { kind: kind, key: key, placement: placement, descriptor: Object.assign({}, descriptor) }; if (kind !== \"field\") { this.disallowProperty(elementObject, \"initializer\", \"A method descriptor\"); } else { this.disallowProperty(descriptor, \"get\", \"The property descriptor of a field descriptor\"); this.disallowProperty(descriptor, \"set\", \"The property descriptor of a field descriptor\"); this.disallowProperty(descriptor, \"value\", \"The property descriptor of a field descriptor\"); element.initializer = elementObject.initializer; } return element; }, toElementFinisherExtras: function (elementObject) { var element = this.toElementDescriptor(elementObject); var finisher = _optionalCallableProperty(elementObject, \"finisher\"); var extras = this.toElementDescriptors(elementObject.extras); return { element: element, finisher: finisher, extras: extras }; }, fromClassDescriptor: function (elements) { var obj = { kind: \"class\", elements: elements.map(this.fromElementDescriptor, this) }; var desc = { value: \"Descriptor\", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); return obj; }, toClassDescriptor: function (obj) { var kind = String(obj.kind); if (kind !== \"class\") { throw new TypeError('A class descriptor\\'s .kind property must be \"class\", but a decorator' + ' created a class descriptor with .kind \"' + kind + '\"'); } this.disallowProperty(obj, \"key\", \"A class descriptor\"); this.disallowProperty(obj, \"placement\", \"A class descriptor\"); this.disallowProperty(obj, \"descriptor\", \"A class descriptor\"); this.disallowProperty(obj, \"initializer\", \"A class descriptor\"); this.disallowProperty(obj, \"extras\", \"A class descriptor\"); var finisher = _optionalCallableProperty(obj, \"finisher\"); var elements = this.toElementDescriptors(obj.elements); return { elements: elements, finisher: finisher }; }, runClassFinishers: function (constructor, finishers) { for (var i = 0; i < finishers.length; i++) { var newConstructor = (0, finishers[i])(constructor); if (newConstructor !== undefined) { if (typeof newConstructor !== \"function\") { throw new TypeError(\"Finishers must return a constructor.\"); } constructor = newConstructor; } } return constructor; }, disallowProperty: function (obj, name, objectType) { if (obj[name] !== undefined) { throw new TypeError(objectType + \" can't have a .\" + name + \" property.\"); } } }; return api; }\n\nfunction _createElementDescriptor(def) { var key = _toPropertyKey(def.key); var descriptor; if (def.kind === \"method\") { descriptor = { value: def.value, writable: true, configurable: true, enumerable: false }; } else if (def.kind === \"get\") { descriptor = { get: def.value, configurable: true, enumerable: false }; } else if (def.kind === \"set\") { descriptor = { set: def.value, configurable: true, enumerable: false }; } else if (def.kind === \"field\") { descriptor = { configurable: true, writable: true, enumerable: true }; } var element = { kind: def.kind === \"field\" ? \"field\" : \"method\", key: key, placement: def.static ? \"static\" : def.kind === \"field\" ? \"own\" : \"prototype\", descriptor: descriptor }; if (def.decorators) element.decorators = def.decorators; if (def.kind === \"field\") element.initializer = def.value; return element; }\n\nfunction _coalesceGetterSetter(element, other) { if (element.descriptor.get !== undefined) { other.descriptor.get = element.descriptor.get; } else { other.descriptor.set = element.descriptor.set; } }\n\nfunction _coalesceClassElements(elements) { var newElements = []; var isSameElement = function (other) { return other.kind === \"method\" && other.key === element.key && other.placement === element.placement; }; for (var i = 0; i < elements.length; i++) { var element = elements[i]; var other; if (element.kind === \"method\" && (other = newElements.find(isSameElement))) { if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) { if (_hasDecorators(element) || _hasDecorators(other)) { throw new ReferenceError(\"Duplicated methods (\" + element.key + \") can't be decorated.\"); } other.descriptor = element.descriptor; } else { if (_hasDecorators(element)) { if (_hasDecorators(other)) { throw new ReferenceError(\"Decorators can't be placed on different accessors with for \" + \"the same property (\" + element.key + \").\"); } other.decorators = element.decorators; } _coalesceGetterSetter(element, other); } } else { newElements.push(element); } } return newElements; }\n\nfunction _hasDecorators(element) { return element.decorators && element.decorators.length; }\n\nfunction _isDataDescriptor(desc) { return desc !== undefined && !(desc.value === undefined && desc.writable === undefined); }\n\nfunction _optionalCallableProperty(obj, name) { var value = obj[name]; if (value !== undefined && typeof value !== \"function\") { throw new TypeError(\"Expected '\" + name + \"' to be a function\"); } return value; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nclass StripeElementsError extends Error {\n  constructor(tag, message) {\n    super(`<${tag}>: ${message}`);\n    this.originalMessage = message;\n  }\n\n}\n/* istanbul ignore next */\n\n\nconst removeAllMounts = slotName => host => host.querySelectorAll(`[slot=\"${slotName}\"][name=\"${slotName}\"]`).forEach(remove);\n\nconst slotTemplate = slotName => html`<slot slot=\"${slotName}\" name=\"${slotName}\"></slot>`;\n\nconst mountPointTemplate = ({\n  stripeMountId,\n  tagName\n}) => html`<div id=\"${ifDefined(stripeMountId)}\" class=\"${tagName.toLowerCase()}-mount\"></div>`;\n/**\n * @fires 'error' - The validation error, or the error returned from stripe.com\n * @fires 'payment-method' - The PaymentMethod received from stripe.com\n * @fires 'source' - The Source received from stripe.com\n * @fires 'token' - The Token received from stripe.com\n * @fires 'success' - When a payment succeeds\n * @fires 'ready' - Stripe has been initialized and mounted\n *\n * @fires 'stripe-ready' - **DEPRECATED**. Will be removed in a future major version. Use `ready` instead\n * @fires 'stripe-error' - **DEPRECATED**. Will be removed in a future major version. Use `error` instead\n * @fires 'stripe-payment-method' - **DEPRECATED**. Will be removed in a future major version. Use `payment-method` instead\n * @fires 'stripe-source' - **DEPRECATED**. Will be removed in a future major version. Use `source` instead\n * @fires 'stripe-token' - **DEPRECATED**. Will be removed in a future major version. Use `token` instead\n *\n * @csspart 'error' - container for the error message\n * @csspart 'stripe' - container for the stripe element\n */\n\n\nlet StripeBase = _decorate(null, function (_initialize, _ReadOnlyPropertiesMi) {\n  class StripeBase extends _ReadOnlyPropertiesMi {\n    /* PAYMENT CONFIGURATION */\n\n    /**\n     * billing_details object sent to create the payment representation. (optional)\n     * @type {stripe.BillingDetails}\n     */\n\n    /**\n     * Data passed to stripe.createPaymentMethod. (optional)\n     * @type {stripe.PaymentMethodData}\n     */\n\n    /**\n     * Data passed to stripe.createSource. (optional)\n     * @type {SourceData}\n     */\n\n    /**\n     * Data passed to stripe.createToken. (optional)\n     * @type {stripe.TokenOptions}\n     */\n\n    /* PAYMENT REPRESENTATIONS */\n\n    /**\n     * Stripe PaymentMethod\n     * @type {stripe.paymentMethod.PaymentMethod}\n     * @readonly\n     */\n\n    /**\n     * Stripe Source\n     * @type {stripe.Source}\n     * @readonly\n     */\n\n    /**\n     * Stripe Token\n     * @type {stripe.Token}\n     * @readonly\n     */\n\n    /* SETTINGS */\n\n    /**\n     * If set, when Stripe returns the payment info (PaymentMethod, Source, or Token),\n     * the element will POST JSON data to this URL with an object containing\n     * a key equal to the value of the `generate` property.\n     * @example\n     * ```html\n     * <stripe-elements\n     *   publishable-key=\"pk_test_XXXXXXXXXXXXX\"\n     *   generate=\"token\"\n     *   action=\"/payment\"\n     * ></stripe-elements>\n     * ```\n     * will POST to `/payment` with JSON body `{ \"token\": { ... } }`\n     * ```js\n     * stripeElements.submit();\n     * ```\n     * @type {string}\n     */\n\n    /**\n     * The `client_secret` part of a Stripe `PaymentIntent`\n     * @type {string}\n     */\n\n    /**\n     * Type of payment representation to generate.\n     * @type {'payment-method'|'source'|'token'}\n     * @required\n     */\n\n    /**\n     * Stripe Publishable Key. EG. `pk_test_XXXXXXXXXXXXXXXXXXXXXXXX`\n     * @type {string}\n     */\n\n    /** Whether to display the error message */\n\n    /* READ-ONLY FIELDS */\n\n    /**\n     * Stripe element instance\n     * @type {stripe.elements.Element}\n     * @readonly\n     */\n\n    /**\n     * Stripe Elements instance\n     * @type {stripe.elements.Elements}\n     * @readonly\n     */\n\n    /**\n     * Stripe or validation error\n     * @type {Error|stripe.Error}\n     * @readonly\n     */\n\n    /**\n     * If the element is focused.\n     * @type {boolean}\n     * @readonly\n     */\n\n    /**\n     * Whether the stripe element is ready to receive focus.\n     * @type {boolean}\n     * @readonly\n     */\n\n    /**\n     * Stripe instance\n     * @type {stripe.Stripe}\n     * @readonly\n     */\n    // DEPRECATED\n\n    /**\n     * Whether the element has an error\n     * **DEPRECATED**. Will be removed in a future version. Use `error` instead\n     * @type {boolean}\n     * @readonly\n     * @deprecated\n     */\n\n    /**\n     * Whether the stripe element is ready to receive focus.\n     * **DEPRECATED**. Will be removed in a future version. use `ready` instead.\n     * @deprecated\n     * @type {boolean}\n     */\n\n    /* PRIVATE FIELDS */\n\n    /**\n     * Breadcrumbs back up to the document.\n     * @type {Node[]}\n     * @private\n     */\n\n    /**\n     * Stripe.js mount point element. Due to limitations in the Stripe.js library, this element must be connected to the document.\n     * @type {Element}\n     * @protected\n     */\n\n    /**\n     * Stripe.js mount point element id. Due to limitations in the Stripe.js library, this element must be connected to the document.\n     * @type {string}\n     * @protected\n     */\n\n    /**\n     * Name for breadcrumb slots. Derived from tagName\n     * @protected\n     * @type {string}\n     */\n\n    /* LIFECYCLE */\n\n    /** @inheritdoc */\n    constructor() {\n      super();\n\n      _initialize(this);\n\n      this.slotName = `${this.tagName.toLowerCase()}-slot`;\n    }\n    /** @inheritdoc */\n\n\n  }\n\n  return {\n    F: StripeBase,\n    d: [{\n      kind: \"field\",\n      key: \"billingDetails\",\n\n      value() {\n        return {};\n      }\n\n    }, {\n      kind: \"field\",\n      key: \"paymentMethodData\",\n\n      value() {\n        return {};\n      }\n\n    }, {\n      kind: \"field\",\n      key: \"sourceData\",\n\n      value() {\n        return {};\n      }\n\n    }, {\n      kind: \"field\",\n      key: \"tokenData\",\n\n      value() {\n        return {};\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        notify: true,\n        readOnly: true,\n        attribute: 'payment-method'\n      })],\n      key: \"paymentMethod\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"source\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"token\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"action\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: 'client-secret'\n      })],\n      key: \"clientSecret\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String\n      })],\n      key: \"generate\",\n\n      value() {\n        return 'source';\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: String,\n        attribute: 'publishable-key',\n        reflect: true,\n        notify: true\n      })],\n      key: \"publishableKey\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: 'show-error',\n        reflect: true\n      })],\n      key: \"showError\",\n\n      value() {\n        return false;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        readOnly: true\n      })],\n      key: \"element\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        readOnly: true\n      })],\n      key: \"elements\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        notify: true,\n        readOnly: true,\n        reflect: true,\n        converter: {\n          toAttribute: error => !error ? null : error.originalMessage || error.message || ''\n        }\n      })],\n      key: \"error\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"focused\",\n\n      value() {\n        return false;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        reflect: true,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"ready\",\n\n      value() {\n        return false;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Object,\n        readOnly: true\n      })],\n      key: \"stripe\",\n\n      value() {\n        return null;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: 'has-error',\n        reflect: true,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"hasError\",\n\n      value() {\n        return false;\n      }\n\n    }, {\n      kind: \"field\",\n      decorators: [property({\n        type: Boolean,\n        attribute: 'stripe-ready',\n        reflect: true,\n        notify: true,\n        readOnly: true\n      })],\n      key: \"stripeReady\",\n\n      value() {\n        return false;\n      }\n\n    }, {\n      kind: \"field\",\n      key: \"shadowHosts\",\n\n      value() {\n        return [];\n      }\n\n    }, {\n      kind: \"get\",\n      key: \"stripeMount\",\n      value: function stripeMount() {\n        return document.getElementById(this.stripeMountId);\n      }\n    }, {\n      kind: \"field\",\n      key: \"stripeMountId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"slotName\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        const {\n          error,\n          showError,\n          slotName\n        } = this;\n        const errorMessage = (error === null || error === void 0 ? void 0 : error.originalMessage) || (error === null || error === void 0 ? void 0 : error.message);\n        return html`\n      <div id=\"stripe\" part=\"stripe\">\n        <slot id=\"stripe-slot\" name=\"${slotName}\"></slot>\n      </div>\n\n      <output id=\"error\"\n          for=\"stripe\"\n          part=\"error\"\n          ?hidden=\"${!showError}\">\n        ${ifDefined(errorMessage)}\n      </output>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this.destroyMountPoints();\n        this.initMountPoints();\n      }\n      /** @inheritdoc */\n\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changed) {\n        var _get2;\n\n        (_get2 = _get(_getPrototypeOf(StripeBase.prototype), \"updated\", this)) === null || _get2 === void 0 ? void 0 : _get2(changed);\n        if (changed.has('error')) this.errorChanged();\n        if (changed.has('publishableKey')) this.init();\n        [...changed.keys()].forEach(this.representationChanged);\n      }\n      /* PUBLIC API */\n\n      /**\n       * Resets and clears the stripe element.\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"reset\",\n      value: function reset() {\n        var _this$element, _this$element$clear;\n\n        (_this$element = this.element) === null || _this$element === void 0 ? void 0 : (_this$element$clear = _this$element.clear) === null || _this$element$clear === void 0 ? void 0 : _this$element$clear.call(_this$element);\n        this.resetRepresentations();\n        this.set({\n          error: null\n        });\n      }\n      /** Blurs the element. */\n\n    }, {\n      kind: \"method\",\n      key: \"blur\",\n      value: function blur() {\n        var _this$element2;\n\n        (_this$element2 = this.element) === null || _this$element2 === void 0 ? void 0 : _this$element2.blur();\n      }\n      /** Focuses the element. */\n\n    }, {\n      kind: \"method\",\n      key: \"focus\",\n      value: function focus() {\n        var _this$element3;\n\n        (_this$element3 = this.element) === null || _this$element3 === void 0 ? void 0 : _this$element3.focus();\n      }\n      /* PRIVATE API */\n\n      /**\n       * Creates a new StripeElementsError\n       * @param  {string} message\n       * @return {StripeElementsError}\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"createError\",\n      value: function createError(message) {\n        return new StripeElementsError(this.constructor.is, message);\n      }\n      /**\n       * Clears the Payment Representation and fires an error event\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"errorChanged\",\n      value: async function errorChanged() {\n        // DEPRECATED\n        const hasError = !!this.error;\n        await this.set({\n          hasError\n        }); // END DEPRECATED\n\n        this.resetRepresentations();\n        this.fireError(this.error);\n      }\n      /**\n       * Fires an event.\n       * @param  {string} type      event type\n       * @param  {any}    detail    detail value\n       * @param  {EventInit} [opts={}]\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"fire\",\n      value: function fire(type, detail, opts = {}) {\n        this.dispatchEvent(new CustomEvent(type, {\n          detail,\n          ...opts\n        }));\n      }\n      /**\n       * Fires an Error Event\n       * @param  {Error} error\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"fireError\",\n      value: function fireError(error) {\n        this.dispatchEvent(new ErrorEvent('error', {\n          error\n        })); // DEPRECATED\n\n        this.dispatchEvent(new ErrorEvent('stripe-error', {\n          bubbles: true,\n          error\n        }));\n      }\n      /**\n       * Gets a CSS Custom Property value, respecting ShadyCSS.\n       * @param  {string} propertyName    CSS Custom Property\n       * @param  {CSSStyleDeclaration}    [precomputedStyle] pre-computed style declaration\n       * @return {any}\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"getCSSCustomPropertyValue\",\n      value: function getCSSCustomPropertyValue(propertyName, precomputedStyle) {\n        if (window.ShadyCSS) return ShadyCSS.getComputedStyleValue(this, propertyName);else return precomputedStyle.getPropertyValue(propertyName);\n      }\n      /**\n       * Sets the token or error from the response.\n       * @param  {PaymentResponse} response       Stripe Response\n       * @return {PaymentResponse}\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      decorators: [bound],\n      key: \"handleResponse\",\n      value: async function handleResponse(response) {\n        const {\n          error = null,\n          paymentMethod = null,\n          source = null,\n          token = null\n        } = response;\n        await this.set({\n          error,\n          paymentMethod,\n          source,\n          token\n        });\n        if (error) throw error;else return response;\n      }\n      /**\n       * Removes all mount points from the DOM\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"destroyMountPoints\",\n      value: function destroyMountPoints() {\n        this.shadowHosts.forEach(removeAllMounts(this.slotName));\n        if (this.stripeMount) this.stripeMount.remove();\n      }\n      /**\n       * Reinitializes Stripe and mounts the element.\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"init\",\n      value: async function init() {\n        await this.unmount();\n        await this.initStripe();\n        await this.initElement();\n        this.initElementListeners();\n        this.destroyMountPoints();\n        this.initMountPoints();\n        this.mount();\n      }\n      /**\n       * Adds `ready`, `focus`, and `blur` listeners to the Stripe Element\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"initElementListeners\",\n      value: function initElementListeners() {\n        if (!this.element) return;\n        this.element.addEventListener('ready', this.onReady);\n        this.element.addEventListener('focus', this.onFocus);\n        this.element.addEventListener('blur', this.onBlur);\n      }\n      /**\n       * Creates mount points for the Stripe Element\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"initMountPoints\",\n      value: function initMountPoints() {\n        this.stripeMountId = generateRandomMountElementId(this.tagName);\n        if (window.ShadyDOM) appendTemplate(mountPointTemplate(this), this);else this.initShadowMountPoints();\n      }\n      /**\n       * Prepares to mount Stripe Elements in light DOM.\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"initShadowMountPoints\",\n      value: function initShadowMountPoints() {\n        // trace each shadow boundary between us and the document\n        let host = this;\n        this.shadowHosts = [this];\n\n        while (host = host.getRootNode().host) this.shadowHosts.push(host); // eslint-disable-line prefer-destructuring, no-loops/no-loops\n\n\n        const {\n          shadowHosts,\n          slotName\n        } = this; // Prepare the shallowest breadcrumb slot at document level\n\n        const hosts = [...shadowHosts];\n        const root = hosts.pop();\n\n        if (!root.querySelector(`[slot=\"${slotName}\"]`)) {\n          const div = document.createElement('div');\n          div.slot = slotName;\n          root.appendChild(div);\n        }\n\n        const container = root.querySelector(`[slot=\"${slotName}\"]`); // Render the form to the document, so that Stripe.js can mount\n\n        appendTemplate(mountPointTemplate(this), container); // Append breadcrumb slots to each shadowroot in turn,\n        // from the document down to the <stripe-elements> instance.\n\n        hosts.forEach(appendTemplate(slotTemplate(slotName)));\n      }\n      /**\n       * Initializes Stripe and elements.\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"initStripe\",\n      value: async function initStripe() {\n        const {\n          publishableKey\n        } = this;\n        const stripe = window.Stripe && publishableKey ? Stripe(publishableKey) : null;\n        const elements = stripe && stripe.elements();\n        const error = stripe ? null : this.createError('requires Stripe.js to be loaded first.');\n        if (error) console.warn(error.message); // eslint-disable-line no-console\n\n        await this.set({\n          elements,\n          error,\n          stripe\n        });\n      }\n      /**\n       * Mounts the Stripe Element\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"mount\",\n      value: function mount() {\n        var _this$element4;\n\n        /* istanbul ignore next */\n        if (!this.stripeMount) throw this.createError('Stripe Mount missing');\n        (_this$element4 = this.element) === null || _this$element4 === void 0 ? void 0 : _this$element4.mount(this.stripeMount);\n      }\n      /**\n       * Unmounts and nullifies the card.\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"unmount\",\n      value: async function unmount() {\n        var _this$element5;\n\n        (_this$element5 = this.element) === null || _this$element5 === void 0 ? void 0 : _this$element5.unmount();\n        await this.set({\n          element: null\n        });\n      }\n      /**\n       * @param  {StripeFocusEvent} event\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      decorators: [bound],\n      key: \"onBlur\",\n      value: async function onBlur() {\n        await this.set({\n          focused: false\n        });\n      }\n      /**\n       * @param  {StripeFocusEvent} event\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      decorators: [bound],\n      key: \"onFocus\",\n      value: async function onFocus() {\n        await this.set({\n          focused: true\n        });\n      }\n      /**\n       * Sets the `ready` property when the stripe element is ready to receive focus.\n       * @param  {Event} event\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      decorators: [bound],\n      key: \"onReady\",\n      value: async function onReady(event) {\n        await this.set({\n          ready: true,\n          stripeReady: true\n        });\n        this.fire('ready', event); // DEPRECATED\n\n        this.fire('stripe-ready', event);\n      }\n      /**\n       * POSTs the payment info represenation to the endpoint at `/action`\n       * @resolves {void}\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"postRepresentation\",\n      value: async function postRepresentation() {\n        const onError = error => this.set({\n          error\n        });\n\n        const onSuccess = success => {\n          this.fire('success', success); // DEPRECATED\n\n          this.fire('stripe-payment-success', success);\n        };\n\n        const token = this.token || undefined;\n        const source = this.source || undefined;\n        const paymentMethod = this.paymentMethod || undefined;\n        const body = JSON.stringify({\n          token,\n          source,\n          paymentMethod\n        });\n        const headers = {\n          'Content-Type': 'application/json'\n        };\n        const method = 'POST';\n        return fetch(this.action, {\n          body,\n          headers,\n          method\n        }).then(throwBadResponse).then(onSuccess).catch(onError);\n      }\n      /**\n       * @param {string} name\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      decorators: [bound],\n      key: \"representationChanged\",\n      value: function representationChanged(name) {\n        if (!isRepresentation(name)) return;\n        const value = this[name];\n        /* istanbul ignore if */\n\n        if (!value) return; // DEPRECATED\n\n        this.fire(`stripe-${dash(name)}`, value);\n        this.fire(`${dash(name)}`, value);\n        if (this.action) this.postRepresentation();\n      }\n      /**\n       * Resets the Payment Representations\n       * @private\n       */\n\n    }, {\n      kind: \"method\",\n      key: \"resetRepresentations\",\n      value: function resetRepresentations() {\n        this.set({\n          paymentMethod: null,\n          token: null,\n          source: null\n        });\n      }\n    }]\n  };\n}, ReadOnlyPropertiesMixin(LitNotify(LitElement)));\n/** @typedef {stripe.PaymentIntentResponse|stripe.PaymentMethodResponse|stripe.SetupIntentResponse|stripe.TokenResponse|stripe.SourceResponse} PaymentResponse */\n\n/** @typedef {{ owner: stripe.OwnerData }} SourceData */\n\n/** @typedef {{ elementType: stripe.elements.elementsType }} StripeFocusEvent */\n\nvar sharedStyles = css`[hidden] {\n  display: none !important;\n}\n\n:host {\n  display: block;\n  box-sizing: border-box;\n}\n\n#error {\n  font-family: sans-serif;\n  font-size: 14px;\n  padding-left: 42px;\n  padding-bottom: 10px;\n}\n`;\n\nexport { StripeBase as S, mapProps as a, bound as b, camel as c, dash as d, mapDataset as m, sharedStyles as s };\n//# sourceMappingURL=shared.js.map\n","const compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\nconst isString = x => typeof x === 'string';\nconst trim = s => s.trim();\nconst isObject = x => x !== null && `${x}` === '[object Object]';\nconst replace = (...args) => s => s.replace(...args);\nconst isAllStrings = xs => Array.isArray(xs) && xs.every(isString);\nconst fromEntries = xs => Object.fromEntries ? Object.fromEntries(xs) :\n  xs.reduce((o, [k, v]) => Object.assign({ [k]: v }, o), {});\nconst flatMap = f => xs =>\n  'flatMap' in Array.prototype ?\n    xs.flatMap(f) :\n    xs.reduce((acc, x) => acc.concat(f(x)), []);\n\nconst pick = (keys, element) =>\n  keys.reduce((pojo, key) =>\n    Object.assign(pojo, { [key]: element[key] }), {});\n\nconst stripUndefinedVals = flatMap(([k, v]) => v === undefined ? [] : [[k, v]]);\nconst stripUndefined = compose(fromEntries, stripUndefinedVals, Object.entries);\n\nconst mark = x =>\n    x instanceof Element ? `<mark class='string'>${x.outerHTML.replace(/</g, '&lt;').replace(/\"/g, '\\'')}</mark>` :\n  isObject(x) || Array.isArray(x) ? x :\n  `<mark class='${x === null ? 'null' : typeof x}'>${x}</mark>`;\n\nconst replacer = (k, v) => k === '' ? v : mark(v);\nconst pretty = o => JSON.stringify(o, replacer, 2);\n\nconst markKeys = replace(/\"(.*)\":/g, (_, key) => `<mark class=\"key\">\"${key}\"</mark>:`);\nconst wrapStrings = replace(/\"<mark(.*)>(.*)<\\/mark>\"/g, (_, attrs, content) =>\n  `<mark${attrs}>${attrs.includes('string') ? `\"${content}\"` : content}</mark>`);\n\nconst json = compose(wrapStrings, markKeys, pretty, stripUndefined);\n\nconst css = `\n[hidden],\n:host([hidden]) {\n  display: none !important;\n}\n\n:host {\n  display: block;\n  position: relative;\n  color: var(--json-viewer-color, currentColor);\n  background: var(--json-viewer-background);\n}\n\nmark { background: none; }\nmark.key { color: var(--json-viewer-key-color); }\nmark.boolean { color: var(--json-viewer-boolean-color); }\nmark.number { color: var(--json-viewer-number-color); }\nmark.null { color: var(--json-viewer-null-color); }\nmark.string { color: var(--json-viewer-string-color); }\n\n@media (prefers-color-scheme: dark), (prefers-color-scheme: no-preference) {\n  :host {\n    --json-viewer-color: white;\n    --json-viewer-background: #212529;\n    --json-viewer-key-color: #ff922b;\n    --json-viewer-boolean-color: #22b8cf;\n    --json-viewer-number-color: #51cf66;\n    --json-viewer-null-color: #ff6b6b;\n    --json-viewer-string-color: #22b8cf;\n  }\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    --json-viewer-color: #212529;\n    --json-viewer-background: white;\n    --json-viewer-key-color: #f76707;\n    --json-viewer-boolean-color: #0c8599;\n    --json-viewer-number-color: #0ca678;\n    --json-viewer-null-color: #e03131;\n    --json-viewer-string-color: #0c8599;\n  }\n}\n`;\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<code hidden>\n  <pre></pre>\n</code>\n`;\n\nconst WLATTR = 'whitelist';\n\n/**\n * Custom Element that shows a JavaScript object's properties as syntax-highlighted JSON.\n *\n * The element will respect `prefers-color-scheme` by default, but if you use the\n * CSS Custom Properties listed below, you should customize both light and dark themes.\n *\n * ❤️ Proudly uses [open-wc](https://open-wc.org) tools and recommendations.\n *\n * @example\n * ```javascript\n * const properties = {foo: 'foo', bar: 'bar', baz: 'baz'};\n * const template = html`<json-viewer .object=\"${properties}\" whitelist=\"foo,bar\"></json-viewer>`;\n * render(template, document.body);\n * ```\n *\n * @example\n * ```html\n * <json-viewer whitelist=\"foo,bar\">\n * {\n *   \"foo\": \"foo\",\n *   \"bar\": \"bar\",\n *   \"baz\": \"baz\"\n * }\n * </json-viewer>\n * ```\n *\n * @cssprop --json-viewer-color - Color for generic text. Light white, Dark #212121\n * @cssprop --json-viewer-background - Color for generic text. Light #212121, Dark white\n * @cssprop --json-viewer-key-color - Color for keys. Light #f76707, Dark #ff922b\n * @cssprop --json-viewer-boolean-color - Color for booleans. Light #f76707, Dark #22b8cf\n * @cssprop --json-viewer-number-color - Color for numbers. Light #0ca678, Dark #51cf66\n * @cssprop --json-viewer-null-color - Color for nulls. Light #e03131, Dark #ff6b6b\n * @cssprop --json-viewer-string-color - Color for strings. Light #0c8599, Dark #22b8cf\n *\n * @slot - JSON strings appended as text nodes will be parsed and displayed\n */\nexport class JsonViewer extends HTMLElement {\n  static get is() {\n    return 'json-viewer';\n  }\n\n  static get observedAttributes() {\n    return [WLATTR];\n  }\n\n  /**\n   * Object to display\n   * @type {object}\n   */\n  get object() {\n    return this.__object;\n  }\n\n  set object(val) {\n    this.__object = val;\n    this.render();\n  }\n\n  /**\n   * Whitelist of keys for the object.\n   * Required if setting `object` to a non-serializable object (e.g. an HTMLElement)\n   * @type {string[]}\n   * @attr\n   */\n  get whitelist() {\n    return this.__whitelist;\n  }\n\n  set whitelist(val) {\n    if (!isAllStrings(val)) {\n      throw new Error('whitelist must be an array of strings');\n    }\n    this.__whitelist = val;\n    const attr = val.join(',');\n    this.setAttribute(WLATTR, attr);\n    this.render();\n  }\n\n  constructor() {\n    super();\n    this.__mo = new MutationObserver(this.parse.bind(this));\n    this.__mo.observe(this, { subtree: false, characterData: true });\n    this.attachShadow({ mode: 'open' });\n    if ('adoptedStyleSheets' in Document.prototype) {\n      const styles = new CSSStyleSheet();\n      styles.replaceSync(css);\n      this.shadowRoot.adoptedStyleSheets = [styles];\n    } else {\n      this.shadowRoot.innerHTML = `<style>${css}</style>`;\n    }\n    this.shadowRoot.append(template.content.cloneNode(true));\n  }\n\n  attributeChangedCallback(_, __, whitelist) {\n    this.whitelist = whitelist.split(',').map(trim);\n  }\n\n  connectedCallback() {\n    this.parse();\n  }\n\n  /**\n   * @private\n   * @return {string} syntax-highlighted HTML string\n   */\n  getHighlightedDomString() {\n    const { whitelist, object } = this;\n    return object === undefined ?\n      '' : json(whitelist ? pick(whitelist, object) : object);\n  }\n\n  /** @private */\n  render() {\n    const highlighted = this.getHighlightedDomString();\n    this.shadowRoot.querySelector('code').hidden = !highlighted;\n    this.shadowRoot.querySelector('pre').innerHTML = highlighted;\n  }\n\n  /** @private */\n  parse() {\n    if (!this.textContent.trim()) return;\n    try {\n      this.object = JSON.parse(this.textContent);\n    } catch (_) {\n      this.object = undefined;\n    }\n  }\n}\n\ncustomElements.define(JsonViewer.is, JsonViewer);\n","import eagerDash from '@lavadrop/kebab-case';\nimport eagerCamel from '@lavadrop/camel-case';\nimport { memoize } from '@pacote/memoize';\n\nconst identity = x => x;\n\n/** camelCase a string */\nexport const camel = memoize(identity, eagerCamel);\n\n/** dash-case a string */\nexport const dash = memoize(identity, eagerDash);\n\n/**\n * Generates a random mount point for Stripe Elements. This will allow multiple\n * Elements forms to be embedded on a single page.\n * @param {'STRIPE-ELEMENTS'|'STRIPE-PAYMENT-REQUEST'} tagName element tag name\n * @return {string} mount element id\n */\nexport function generateRandomMountElementId(tagName) {\n  return `${tagName.toLowerCase()}-mount-point-${(Date.now() + (Math.random() * 1000)).toString(36).substr(0, 8)}`;\n}\n","import { LitElement, css, html } from 'lit-element';\n\nimport { camel } from '../src/lib/strings';\n\nexport const $ = x => document.querySelector(x);\nexport const $$ = x => [...document.querySelectorAll(x)];\n\nconst compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\n\nconst LS_KEYS = Object.freeze({\n  publishableKey: '__STRIPE_PUBLISHABLE_KEY__',\n  clientSecret: '__STRIPE_CLIENT_SECRET__',\n});\n\nexport const publishableKey =\n  localStorage.getItem(LS_KEYS.publishableKey) || 'pk_test_XXXXXXXXXXXXXXXXXXXXXXXX';\n\nconst setProp = (prop, value) => el =>\n  (el[prop] = value);\n\nconst storePublishableKey = publishableKey => {\n  localStorage.setItem(LS_KEYS.publishableKey, publishableKey);\n  return publishableKey;\n};\n\nconst setProps = propName => selector => ({ target: { value } }) => {\n  $$(selector).forEach(setProp(propName, value));\n  return value;\n};\n\nexport const setKeys = x => compose(storePublishableKey, setProps('publishableKey')(x));\n\nexport const setClientSecrets = setProps('clientSecret');\n\nexport const displayObject = ({ target, detail }) => {\n  const viewer = target.parentElement.querySelector('json-viewer');\n  viewer.object = detail;\n};\n\nconst fieldEntry = field => [field.dataset.ownerProp, field.value];\n\nconst shared = css`\n  [hidden] { display: none !important; }\n\n  :host {\n    align-items: center;\n    display: grid;\n    grid-gap: 12px;\n  }\n\n  #stripe {\n    display: contents;\n  }\n\n  ::slotted([publishable-key]) {\n    grid-area: stripe;\n  }\n`;\n\nclass DemoBase extends LitElement {\n  static get properties() {\n    return {\n      output: { type: Object },\n    };\n  }\n\n  get stripe() {\n    return this.querySelector(this.constructor.selector);\n  }\n\n  constructor() {\n    super();\n    this.display = this.display.bind(this);\n  }\n\n  attachStripeListeners() {\n    this.stripe.addEventListener('success', this.display);\n    this.stripe.addEventListener('fail', this.display);\n  }\n\n  removeStripeListeners() {\n    this.stripe.removeEventListener('success', this.display);\n    this.stripe.removeEventListener('fail', this.display);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const mo = new MutationObserver(this.attachStripeListeners);\n    mo.observe(this, { childList: true });\n    this.attachStripeListeners();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeStripeListeners();\n  }\n\n  display({ target }) {\n    const val = target[camel(target.generate)];\n    this.output = val;\n  }\n}\n\ncustomElements.define('elements-demo', class ElementsDemo extends DemoBase {\n  static get properties() {\n    return {\n      submitDisabled: { type: Boolean },\n      label: { type: String },\n    };\n  }\n\n  static get styles() {\n    return [shared, css`\n      :host {\n        grid-template-areas:\n          'stripe stripe'\n          'fields fields';\n      }\n\n      #actions {\n        display: contents;\n      }\n`];\n  }\n\n  static get selector() {\n    return 'stripe-elements';\n  }\n\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.submitDisabled = true;\n    const stripe = this.querySelector(this.constructor.selector);\n    if (!stripe) return;\n  }\n\n  attachStripeListeners() {\n    super.attachStripeListeners();\n    this.stripe.addEventListener('change', this.onChange);\n  }\n\n  removeStripeListeners() {\n    super.removeStripeListeners();\n    this.stripe.removeEventListener('change', this.onChange);\n  }\n\n  validate() {\n    return this.stripe.validate();\n  }\n\n  get billingDetails() {\n    const slot = this.shadowRoot.querySelector('slot[name=\"actions\"]');\n    const assigned = slot.assignedElements();\n    const elements = (assigned.length ? assigned : [...slot.children]);\n    return Object.fromEntries(elements.map(fieldEntry));\n  }\n\n  render() {\n    return html`\n      <div id=\"stripe\" ?hidden=\"${this.output}\">\n        <slot></slot>\n      </div>\n\n      <div id=\"actions\" ?hidden=\"${this.output}\">\n        <slot name=\"actions\">\n          <mwc-textfield outlined label=\"Cardholder Name\" data-owner-prop=\"name\" value=\"Mr. Man\"> </mwc-textfield>\n          <mwc-textfield outlined label=\"Cardholder Email\" data-owner-prop=\"email\" value=\"mr@man.email\"> </mwc-textfield>\n          <mwc-textfield outlined label=\"Cardholder Phone\" data-owner-prop=\"phone\" value=\"555 555 5555\"> </mwc-textfield>\n          <mwc-button ?disabled=\"${this.submitDisabled}\" outlined @click=\"${this.onClickSubmit}\">${this.label}</mwc-button>\n        </slot>\n      </div>\n\n      <json-viewer .object=\"${this.output}\"> </json-viewer>\n    `;\n  }\n\n  async onClickSubmit() {\n    const [element] = this.shadowRoot.querySelector('#stripe slot').assignedElements();\n    element.billingDetails = this.billingDetails;\n    this.output = await element.submit();\n  }\n\n  onChange({ target: { isComplete } }) {\n    this.submitDisabled = !isComplete;\n  }\n});\n\ncustomElements.define('payment-request-demo', class PaymentRequestDemo extends DemoBase {\n  static get styles() {\n    return [shared, css`\n      :host {\n        grid-template-areas:\n          'stripe'\n          'output';\n      }\n`];\n  }\n\n  static get selector() {\n    return 'stripe-payment-request';\n  }\n\n  render() {\n    return html`\n      <div id=\"stripe\" ?hidden=\"${this.output}\"><slot></slot></div>\n      <json-viewer .object=\"${this.output}\"> </json-viewer>\n    `;\n  }\n});\n"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_superPropBase","object","property","prototype","hasOwnProperty","call","_get","target","receiver","Reflect","get","base","superPropBase","desc","getOwnPropertyDescriptor","value","eventNameForProperty","name","options","notify","attribute","toLowerCase","LitNotify","baseElement","NotifyingElement","createProperty","_propertyEventMap","Map","set","update","changedProps","constructor","eventProp","eventName","entries","has","dispatchEvent","CustomEvent","detail","bubbles","composed","allCapitalLetterGroups","allLowercaseWords","kebabCase","words","replace","brokenLowered","match","join","s","length","slice","allWords","camelCase","valleyCase","map","x","toUpperCase","createCache","cache","key","memoize","cacheKeyFn","fn","args","descriptor","kind","Error","method","initializer","elementDescriptor","placement","undefined","compose","fns","reduce","f","g","isString","trim","isObject","isAllStrings","xs","Array","isArray","every","fromEntries","k","v","assign","flatMap","acc","concat","pick","keys","element","pojo","stripUndefinedVals","stripUndefined","mark","Element","outerHTML","replacer","pretty","JSON","stringify","markKeys","_","wrapStrings","attrs","content","includes","json","css","template","document","createElement","innerHTML","WLATTR","JsonViewer","HTMLElement","is","observedAttributes","__object","val","render","whitelist","__whitelist","attr","setAttribute","__mo","MutationObserver","parse","bind","observe","subtree","characterData","attachShadow","mode","Document","styles","CSSStyleSheet","replaceSync","shadowRoot","adoptedStyleSheets","append","cloneNode","attributeChangedCallback","__","split","connectedCallback","getHighlightedDomString","highlighted","querySelector","hidden","textContent","customElements","define","identity","camel","eagerCamel","$","$$","querySelectorAll","LS_KEYS","freeze","publishableKey","clientSecret","localStorage","getItem","setProp","prop","el","storePublishableKey","setItem","setProps","propName","selector","forEach","setKeys","setClientSecrets","fieldEntry","field","dataset","ownerProp","shared","DemoBase","LitElement","properties","output","type","stripe","display","attachStripeListeners","addEventListener","removeStripeListeners","removeEventListener","mo","childList","disconnectedCallback","generate","ElementsDemo","submitDisabled","Boolean","label","String","onChange","validate","billingDetails","slot","assigned","assignedElements","elements","children","html","onClickSubmit","submit","isComplete","PaymentRequestDemo"],"mappings":"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"}